{"version":3,"file":"component---src-pages-category-crawlercranes-js-bb2b29f417fa687476a3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Header.js","webpack://gatsby-starter-default/./src/components/LayoutComponents.js","webpack://gatsby-starter-default/./src/components/ModalContact.js","webpack://gatsby-starter-default/./src/components/ModelCard.js","webpack://gatsby-starter-default/./src/pages/category/crawlercranes.js"],"sourcesContent":["// Header.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst HeaderContainer = styled.header`\n  padding: 10px 20px; /* Уменьшаем вертикальные отступы */\n  background: #333;/*eee Фон шапки */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n\n  /* Для экранов от 768px — располагаем три блока в строку */\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n  }\n`;\n\n/* Левый блок с логотипом */\nconst LeftContainer = styled.div`\n  margin-bottom: 10px;\n  /* Анимация появления */\n  animation: fadeIn 1s ease-in-out;\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n  }\n`;\n\n/* Центральный блок с динамическим текстом */\nconst CenterContainer = styled.div`\n  font-size: 2rem; /* базовый размер для мобильных устройств */\n  margin-bottom: 10px;\n  font-weight: 500;\n  position: relative;\n  top: -5px;\n  background: linear-gradient(90deg, #ffb400, #ff7e00);\n  background-size: 200% 200%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradientAnimationSlow 8s ease infinite;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\n\n  @media (min-width: 768px) {\n    font-size: 2.5rem;\n    margin-bottom: 0;\n    flex-grow: 1;\n    text-align: center;\n    align-self: center;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 4rem;\n    margin-bottom: 0;\n    flex-grow: 1;\n    text-align: center;\n    align-self: center;\n  }\n\n  @keyframes gradientAnimationSlow {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n`;\n\n/* Правый блок с контактной информацией */\nconst RightContainer = styled.div`\n  /* Добавлено: разрешаем контейнеру сжиматься */\n  min-width: 0;\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/* Блок ContactInfo также */\nconst ContactInfo = styled.div`\n  text-align: center;\n  min-width: 0;\n  /* Экспериментальное свойство для балансировки переносов */\n  text-wrap: balance;\n\n  /* Фоллбэк‑стили */\n  hyphens: none;\n  word-break: normal;\n  overflow-wrap: break-word;\n\n  @media (min-width: 768px) {\n    text-align: right;\n  }\n`;\n\nconst Logo = styled.h1`\n  font-size: 4rem;\n  margin: 0;\n  font-weight: bold;\n  letter-spacing: 0.4rem;\n  background: linear-gradient(90deg, #a4ce4e, #b8e986);\n  background-size: 200% 200%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradientAnimation 5s ease infinite;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n\n  @keyframes gradientAnimation {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n    font-weight: bold;\n  }\n`;\n\nconst City = styled.p`\n  margin: 0;\n  font-size: 1.2rem;\n  color: #eee;/*#333;*/\n`;\n\nconst Phone = styled.a`\n  display: block;\n  margin: 5px 0;\n  font-size: 1.2rem;\n  color: #eee;/*#333;*/\n  text-decoration: none;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #a4ce4e/*#006f3d;*/\n  }\n`;\n\nconst TelegramLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  font-size: 1.2rem;\n  color: #eee;/*#333;*/\n  text-decoration: none;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #a4ce4e/*#006f3d;*/\n  }\n`;\n\nconst TelegramIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  margin-left: 8px;\n  transform: translateY(1px); /* смещаем иконку вниз для лучшего выравнивания */\n`;\n\nconst WhatsappLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  font-size: 1.2rem;\n  color: #eee;/*#333;*/\n  text-decoration: none;\n  transition: color 0.3s ease;\n  margin-left: 15px; /* Added margin to separate from Telegram */\n\n  &:hover {\n    color: #a4ce4e/*#006f3d;*/\n  }\n`;\n\nconst WhatsappIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  margin-left: 8px;\n  transform: translateY(1px); /* смещаем иконку вниз для лучшего выравнивания */\n`;\n\nconst Header = ({ centerText }) => {\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Logo>\n          <Link to=\"/\">Zoomlio<span className=\"gradient\">n</span></Link>\n        </Logo>\n      </LeftContainer>\n      {centerText && (\n        <CenterContainer>\n          {centerText}\n        </CenterContainer>\n      )}\n      <RightContainer>\n        <ContactInfo>\n          <Phone href=\"tel:+79133777508\">+7-913-377-75-08</Phone>\n          <div>\n            <TelegramLink\n              href=\"https://t.me/gmitry\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <TelegramIcon\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/512px-Telegram_logo.svg.png\"\n                alt=\"Telegram logo\"\n              />\n            </TelegramLink>\n            <WhatsappLink\n              href=\"https://wa.me/79237082254\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <WhatsappIcon\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/512px-WhatsApp.svg.png\"\n                alt=\"WhatsApp logo\"\n              />\n            </WhatsappLink>\n          </div>\n        </ContactInfo>\n      </RightContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nexport const Head = () => (\n  <>\n    <title>Zoomlion</title>\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\" />\n  </>\n);\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  padding: 20px;\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  flex: 1 0 auto;\n`;\n\n// Изменённый компонент Grid для центрирования карточек\nexport const Grid = styled.div`\n  display: grid;\n  /* Используем auto-fit для адаптивности и центрирования карточек */\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 16px 8px; /* 16px для вертикального отступа и 8px для горизонтального */\n  justify-items: center; /* Центрирование содержимого каждой ячейки */\n  justify-content: center; /* Центрирование всей сетки внутри контейнера */\n  padding: 20px;\n`;\n\n// Дополнительный стиль для вывода удобочитаемого названия выбранной модели\nexport const Subtitle = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n  margin-top: 1rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 2rem;\n  border-radius: 8px;\n  max-width: 450px; /* Немного уменьшаем ширину окна */\n  width: 100%;\n  position: relative;\n  text-align: center; /* Центрируем заголовок и логотипы */\n`;\n\nconst IconsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Icon = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nconst ModelText = styled.div`\n  margin: 1rem 0;\n  font-size: 16px;\n  \n  /* Заголовок модели оставляем по центру */\n  h3 {\n    text-align: center;\n  }\n  \n  /* Список отображаем как блок, выровненный по левому краю */\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 auto;\n    max-width: 90%;\n    text-align: left;\n  }\n  \n  li {\n    /* Пункты списка по умолчанию выравниваются по левому краю */\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: #006f3d;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 1rem;\n\n  &:hover {\n    background: #00532d;\n  }\n`;\n\nconst ModalContact = ({ isOpen, onClose, ModelComponent }) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <ModalOverlay onClick={onClose}>\n      <ModalContent onClick={(e) => e.stopPropagation()}>\n        <h2>Связаться с продавцом</h2>\n        <IconsContainer>\n          <a href=\"https://telegram.me/gmitry\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg\" alt=\"Telegram\" />\n          </a>\n          <a href=\"https://wa.me/79133777508\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"WhatsApp\" />\n          </a>\n        </IconsContainer>\n        <ModelText>\n          {ModelComponent ? <ModelComponent /> : \"Информация о модели недоступна.\"}\n        </ModelText>\n        <CloseButton onClick={onClose}>Закрыть</CloseButton>\n      </ModalContent>\n    </ModalOverlay>\n  );\n};\n\nexport default ModalContact;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst Card = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  background: #fff;\n  padding: 16px;\n  cursor: pointer;\n  width: 300px; /* Фиксированная ширина карточки */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  height: 200px;  /* Фиксированная высота для области изображения */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #eee;\n  margin-bottom: 10px;\n`;\n\nconst Placeholder = styled.span`\n  font-size: 14px;\n  color: #666;\n`;\n\nconst ModelCard = ({ name, imageData, onClick }) => {\n  return (\n    <Card onClick={onClick}>\n      <ImageContainer>\n        {imageData ? (\n          <GatsbyImage\n            image={imageData}\n            alt={name}\n            style={{ width: '100%', height: '100%' }}\n            imgStyle={{ objectFit: 'contain' }}\n          />\n        ) : (\n          <Placeholder>Нет фото</Placeholder>\n        )}\n      </ImageContainer>\n      <h3>{name}</h3>\n    </Card>\n  );\n};\n\nexport default ModelCard;","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport ModalContact from '../../components/ModalContact';\nimport ModelCard from '../../components/ModelCard';\nimport Header, { Head as HeaderHead } from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport { Layout, Container, Grid, Subtitle } from '../../components/LayoutComponents';\n\n\nconst CrawlercranesPage = ({ data }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedModel, setSelectedModel] = useState(null);\n\n  const handleCardClick = (model) => {\n    setSelectedModel(model);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedModel(null);\n  };\n\n  const images = data.images.edges;\n  const models = data.models.edges.map(edge => edge.node);\n\n  const getModelImage = (modelId) => {\n    const imageNode = images.find(edge => edge.node.name === modelId);\n    return imageNode ? imageNode.node.childImageSharp.gatsbyImageData : null;\n  };\n\n  const ModelDetails = ({ details }) => (\n    <div>\n      <ul>\n        {details.map(detail => (\n          <li key={detail.label}>\n            <strong>{detail.label}:</strong> {detail.value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  return (\n    <Layout>\n      <Header centerText=\"Гусеничные краны\" />\n\n      <Container>\n        <Grid>\n          {models.map((model) => (\n            <ModelCard\n              key={model.modelId}\n              name={model.name}\n              imageData={getModelImage(model.modelId)}\n              onClick={() => handleCardClick(model)}\n            />\n          ))}\n        </Grid>\n      </Container>\n\n      <ModalContact\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        ModelComponent={selectedModel ? () => <ModelDetails details={selectedModel.details} /> : null}\n      >\n        {selectedModel && <Subtitle>{selectedModel.name}</Subtitle>}\n      </ModalContact>\n\n      <Footer\n        companyName=\"Зумлион Индустри\"\n        yearsActive=\"25\"\n        websiteUrl=\"https://example.com\"\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    images: allFile(filter: { relativeDirectory: { eq: \"crawlercranes\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 300, layout: CONSTRAINED)\n          }\n        }\n      }\n    }\n    models: allCrawlercranesJson {\n      edges {\n        node {\n          modelId\n          name\n          details {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CrawlercranesPage;\n\nexport const Head = HeaderHead;"],"names":["HeaderContainer","styled","header","withConfig","displayName","componentId","LeftContainer","div","CenterContainer","RightContainer","ContactInfo","Logo","h1","Phone","p","a","TelegramLink","TelegramIcon","img","WhatsappLink","WhatsappIcon","_ref","centerText","React","Link","to","className","href","target","rel","src","alt","Head","type","Layout","Container","Grid","Subtitle","ModalOverlay","ModalContent","IconsContainer","Icon","ModelText","CloseButton","button","isOpen","onClose","ModelComponent","onClick","e","stopPropagation","Card","ImageContainer","Placeholder","span","name","imageData","GatsbyImage","image","style","width","height","imgStyle","objectFit","data","isModalOpen","setIsModalOpen","useState","selectedModel","setSelectedModel","images","edges","models","map","edge","node","getModelImage","modelId","imageNode","find","childImageSharp","gatsbyImageData","ModelDetails","_ref2","details","detail","key","label","value","Header","model","ModelCard","handleCardClick","ModalContact","closeModal","Footer","companyName","yearsActive","websiteUrl","HeaderHead"],"sourceRoot":""}