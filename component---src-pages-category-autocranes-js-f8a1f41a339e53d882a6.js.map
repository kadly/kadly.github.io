{"version":3,"file":"component---src-pages-category-autocranes-js-f8a1f41a339e53d882a6.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/ModalContact.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/index.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZMC251C.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZMC601W1.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZTC250V.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZTC300V.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZTC600V5521T.js","webpack://gatsby-starter-default/./src/shortinfo/autocranes/ZTC600V5522C.js","webpack://gatsby-starter-default/./src/modelNames/autocranes.js","webpack://gatsby-starter-default/./src/components/ModelCard.js","webpack://gatsby-starter-default/./src/pages/category/autocranes.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  max-width: 450px; /* Немного уменьшаем ширину окна */\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center; /* Центрируем заголовок и логотипы */\r\n`;\r\n\r\nconst IconsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst ModelText = styled.div`\r\n  margin: 1rem 0;\r\n  font-size: 16px;\r\n  \r\n  /* Заголовок модели оставляем по центру */\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Список отображаем как блок, выровненный по левому краю */\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0 auto;\r\n    max-width: 90%;\r\n    text-align: left;\r\n  }\r\n  \r\n  li {\r\n    /* Пункты списка по умолчанию выравниваются по левому краю */\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: #006f3d;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n\r\n  &:hover {\r\n    background: #00532d;\r\n  }\r\n`;\r\n\r\nconst ModalContact = ({ isOpen, onClose, ModelComponent }) => {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ModalOverlay onClick={onClose}>\r\n      <ModalContent onClick={(e) => e.stopPropagation()}>\r\n        <h2>Связаться с продавцом</h2>\r\n        <IconsContainer>\r\n          <a href=\"https://telegram.me/gmitry\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg\" alt=\"Telegram\" />\r\n          </a>\r\n          <a href=\"https://wa.me/7231280168\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"WhatsApp\" />\r\n          </a>\r\n        </IconsContainer>\r\n        <ModelText>\r\n          {ModelComponent ? <ModelComponent /> : \"Информация о модели недоступна.\"}\r\n        </ModelText>\r\n        <CloseButton onClick={onClose}>Закрыть</CloseButton>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default ModalContact;\r\n","// Импортируем компонент модели\r\nimport ZMC251C from './ZMC251C.js';\r\nimport ZMC601W1 from './ZMC601W1.js';\r\nimport ZTC250V from './ZTC250V.js';\r\nimport ZTC300V from './ZTC300V.js';\r\nimport ZTC600V5521T from './ZTC600V5521T.js';\r\nimport ZTC600V5522C from './ZTC600V5522C.js';\r\n\r\nconst autocraneTexts = {\r\n  'ZMC251C': ZMC251C,\r\n  'ZMC601W1': ZMC601W1,\r\n  'ZTC250V': ZTC250V,\r\n  'ZTC300V': ZTC300V,\r\n  'ZTC600V5521T': ZTC600V5521T,\r\n  'ZTC600V5522C': ZTC600V5522C,\r\n};\r\n\r\nexport default autocraneTexts;","import React from 'react';\r\n\r\nconst ZMC251C = () => (\r\n  <div>\r\n    <h3>Модель ZMC-25-1C</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 25 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 32,5 метра</li>\r\n      <li><strong>Двигатель:</strong> ЯМЗ-53623, Евро-5</li>\r\n      <li><strong>КПП:</strong> ZF9</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZMC251C;","import React from 'react';\r\n\r\nconst ZMC601W1 = () => (\r\n  <div>\r\n    <h3>Модель ZMC-60-1W1</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 60 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 48 метров</li>\r\n      <li><strong>Двигатель:</strong> ЯМЗ-653.10, Евро-5</li>\r\n      <li><strong>КПП:</strong> ZF 16S2525ТО</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZMC601W1;","import React from 'react';\r\n\r\nconst ZTC250V = () => (\r\n  <div>\r\n    <h3>Модель ZTC250V</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 25 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 40,5 метра</li>\r\n      <li><strong>Двигатель:</strong> Cummins ISLe340 30</li>\r\n      <li><strong>КПП:</strong> Fuller RT-11509C</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZTC250V;","import React from 'react';\r\n\r\nconst ZTC250V = () => (\r\n  <div>\r\n    <h3>Модель ZTC300V</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 30 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 40,5 метра</li>\r\n      <li><strong>Двигатель:</strong> Cummins ISLe340 30</li>\r\n      <li><strong>КПП:</strong> Fuller RT-11509C</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZTC250V;","import React from 'react';\r\n\r\nconst ZTC600V5521T = () => (\r\n  <div>\r\n    <h3>Модель ZTC600V552.1T</h3>\r\n  <ul>\r\n    <li><strong>Грузоподъёмность:</strong> 60 тонн</li>\r\n    <li><strong>Максимальная длина стрелы:</strong> 50 метров</li>\r\n    <li><strong>Двигатель:</strong> Cummins QSL9-C325</li>\r\n    <li><strong>КПП:</strong> Allison 4500</li>\r\n  </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZTC600V5521T;","import React from 'react';\r\n\r\nconst ZTC600V5522C = () => (\r\n  <div>\r\n    <h3>Модель ZTC600V552.2C</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 60 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 50 метров</li>\r\n      <li><strong>Двигатель:</strong> Cummins QSL9-C325</li>\r\n      <li><strong>КПП:</strong> Allison 4500</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZTC600V5522C;","const modelNames = {\r\n    \"ZMC251C\": \"Модель ZMC-25-1C 6 (6×6)\",\r\n    \"ZMC601W1\": \"ZMC-60-1W1\",\r\n    \"ZTC250V\": \"ZTC250V\",\r\n    \"ZTC300V\": \"ZTC300V\",\r\n    \"ZTC600V5521T\": \"ZTC600V552.1T\",\r\n    \"ZTC600V5522C\": \"ZTC600V552.2C\",\r\n    \r\n    // Добавьте другие модели по мере необходимости\r\n  };\r\n  \r\n  export default modelNames;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport modelNames from '../modelNames/autocranes.js';\r\n\r\nconst Card = styled.div`\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  background: #fff;\r\n  padding: 16px;\r\n  cursor: pointer;\r\n  margin: 10px;\r\n  width: 300px; /* Фиксированная ширина карточки */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 200px;  /* Фиксированная высота для области изображения */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #eee;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Placeholder = styled.span`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst ModelCard = ({ modelKey, imageData, onClick }) => {\r\n  const displayName = modelNames[modelKey] || modelKey;\r\n  return (\r\n    <Card onClick={onClick}>\r\n      <ImageContainer>\r\n        {imageData ? (\r\n          <GatsbyImage\r\n            image={getImage(imageData)}\r\n            alt={displayName}\r\n            style={{ width: '100%', height: '100%' }}\r\n            imgStyle={{ objectFit: 'contain' }} // Обеспечивает, что изображение не обрезается\r\n          />\r\n        ) : (\r\n          <Placeholder>Нет фото</Placeholder>\r\n        )}\r\n      </ImageContainer>\r\n      <h3>{displayName}</h3>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModelCard;","import React, { useState } from 'react';\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport ModalContact from '../../components/ModalContact';\r\nimport autocraneTexts from '../../shortinfo/autocranes';\r\nimport modelNames from '../../modelNames/autocranes';\r\nimport ModelCard from '../../components/ModelCard';\r\n\r\nconst autocranes = [\r\n  \"ZMC251C\", \"ZMC601W1\", \"ZTC250V\", \"ZTC300V\", \"ZTC600V5521T\", \"ZTC600V5522C\"\r\n];\r\n\r\nconst AutocranesPage = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState(null);\r\n  const [selectedModelText, setSelectedModelText] = useState(\"\");\r\n  \r\n  // Обработчик клика по карточке модели\r\n  const handleCardClick = (model) => {\r\n    setIsModalOpen(true);\r\n    setSelectedModel(model);\r\n    // Используем modelNames для получения удобочитаемого названия\r\n    setSelectedModelText(modelNames[model] || model);\r\n  };\r\n  // Функция закрытия модального окна\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedModel(null);\r\n    setSelectedModelText(\"\");\r\n  };\r\n\r\n  const images = useStaticQuery(graphql`\r\n    query {\r\n      allFile(filter: { relativeDirectory: { eq: \"autocranes\" } }) {\r\n        edges {\r\n          node {\r\n            name\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300, layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  // Функция для получения изображения по имени модели\r\n  const getModelImage = (model) => {\r\n    const imageNode = images.allFile.edges.find(edge => edge.node.name === model);\r\n    return imageNode ? getImage(imageNode.node.childImageSharp) : null;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        {/* Десктопная версия */}\r\n        <DesktopHeader>\r\n          <Title>Автокраны</Title>\r\n          <Link to=\"/\">\r\n            <Logo>Zoomlion</Logo>\r\n          </Link>\r\n          <ContactInfo>\r\n            <p>г. Новосибирск</p>\r\n            <ContactItem>\r\n              <a href=\"tel:+7-923-708-22-54\">+7-923-708-22-54</a>\r\n              <StyledLink href=\"https://t.me/gmitry\">\r\n                <TelegramLogo src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/512px-Telegram_logo.svg.png\" alt=\"Telegram logo\" />\r\n              </StyledLink>\r\n            </ContactItem>\r\n          </ContactInfo>\r\n        </DesktopHeader>\r\n\r\n        {/* Планшетная версия */}\r\n        <TabletHeader>\r\n          <TopRow>\r\n            <Link to=\"/\">\r\n              <Logo>Zoomlion</Logo>\r\n            </Link>\r\n            <ContactInfo>\r\n              <p>г. Новосибирск</p>\r\n              <ContactItem>\r\n                <a href=\"tel:+7-923-708-22-54\">+7-923-708-22-54</a>\r\n                <StyledLink href=\"https://t.me/gmitry\">\r\n                  <TelegramLogo src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/512px-Telegram_logo.svg.png\" alt=\"Telegram logo\" />\r\n                </StyledLink>\r\n              </ContactItem>\r\n            </ContactInfo>\r\n          </TopRow>\r\n          <BottomRow>\r\n            <Title>Автокраны</Title>\r\n          </BottomRow>\r\n        </TabletHeader>\r\n\r\n        {/* Мобильная версия */}\r\n        <MobileHeader>\r\n          <TopRow>\r\n            <Link to=\"/\">\r\n              <Logo>Zoomlion</Logo>\r\n            </Link>\r\n            <ContactInfo>\r\n              <p>г. Новосибирск</p>\r\n              <ContactItem>\r\n                <a href=\"tel:+7-923-708-22-54\">+7-923-708-22-54</a>\r\n                <StyledLink href=\"https://t.me/gmitry\">\r\n                  <TelegramLogo src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/512px-Telegram_logo.svg.png\" alt=\"Telegram logo\" />\r\n                </StyledLink>\r\n              </ContactItem>\r\n            </ContactInfo>\r\n          </TopRow>\r\n          <BottomRow>\r\n            <Title>Автокраны</Title>\r\n          </BottomRow>\r\n        </MobileHeader>\r\n      </Header>\r\n\r\n      <Container>\r\n        <Grid>\r\n          {autocranes.map((model) => (\r\n            <ModelCard \r\n              key={model}\r\n              modelKey={model}\r\n              imageData={getModelImage(model)}\r\n              onClick={() => handleCardClick(model)}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Передаём в модальное окно как компонент модель из autocraneTexts */}\r\n      <ModalContact\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        ModelComponent={autocraneTexts[selectedModel]}\r\n      >\r\n        {/* Если нужно, можно добавить выбранный текст прямо сюда */}\r\n        {selectedModelText && <Subtitle>{selectedModelText}</Subtitle>}\r\n      </ModalContact>\r\n\r\n      <Footer>\r\n        <p>&copy; {new Date().getFullYear()} Зумлион Индустри. 25 лет на рынке в мире</p>\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AutocranesPage;\r\n\r\n/* Стилизация компонентов */\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background: linear-gradient(to right, #333 85%, #666);\r\n  color: white;\r\n  padding: 10px 20px;\r\n`;\r\n\r\n/* Десктопная версия */\r\nconst DesktopHeader = styled.div`\r\n\r\na {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n\r\ndisplay: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  margin: 0;\r\n  color: white;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.h2`\r\n  font-size: 56px;\r\n  margin: 0;\r\n  color: #006f3d;\r\n  font-weight: bold;\r\n  text-shadow: 0 0 8px rgba(255, 255, 255, 0.6), 0 0 10px rgba(255, 255, 255, 0.5);\r\n  -webkit-text-stroke: 1px #fff;\r\n  letter-spacing: 2px;\r\n  animation: fadeIn 1s ease-in-out;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 40px;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(-10px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  text-align: left;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #00c851;\r\n  letter-spacing: 1px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start; /* Выравниваем элементы по левому краю */\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst ContactItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start; /* Выравниваем содержимое влево */\r\n\r\n  a {\r\n    color: #00c851;\r\n    margin-right: 10px;\r\n    transition: transform 0.3s ease, color 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  display: inline-block;\r\n`;\r\n\r\nconst TelegramLogo = styled.img`\r\n  height: 40px;\r\n  width: 40px;\r\n  transition: transform 0.3s ease;\r\n  margin-top: -15px;\r\n  transform-origin: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 0; /* Убираем отрицательный отступ для мобильной версии */\r\n  }\r\n`;\r\n\r\n/* Планшетная версия */\r\nconst TabletHeader = styled.div`\r\n  display: none;\r\n\r\n  @media (min-width: 769px) and (max-width: 1023px) {\r\n    display: block;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #00c851;\r\n    margin-right: 10px;\r\n    transition: transform 0.3s ease, color 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`;\r\n\r\nconst TopRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\n/* Мобильная версия */\r\nconst MobileHeader = styled.div`\r\n  a[href=\"/\"] {\r\n    text-decoration: none !important;\r\n  }\r\n\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n\r\n  ${TopRow} {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  ${ContactItem} {\r\n    position: relative;\r\n    width: 100%;\r\n    padding-right: 50px; /* Место для иконки */\r\n    text-align: center;\r\n        \r\n    a:first-child {\r\n      text-decoration: none;\r\n      display: inline-block;\r\n      width: 100%;\r\n      padding: 0 10px;\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n\r\n  ${StyledLink} {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    /*transform: translateY(-50%);*/\r\n  }\r\n\r\n  ${TelegramLogo} {\r\n    margin-top: 0; /* Сбрасываем предыдущие отступы */\r\n    margin-top: -35px;\r\n  }\r\n`;\r\n\r\n/* Остальные компоненты */\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  flex: 1 0 auto;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  background: #fff;\r\n  padding: 16px;\r\n  flex: 1 1 calc(33.333% - 20px);\r\n  max-width: calc(33.333% - 20px);\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 768px) {\r\n    flex: 1 1 100%;\r\n    max-width: 300px;\r\n  }\r\n\r\n  h3 {\r\n    margin: 10px 0;\r\n    font-size: 18px;\r\n\r\n    @media (max-width: 480px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 20px;\r\n  background: #333;\r\n  color: white;\r\n  margin-top: auto;\r\n`;\r\n\r\n// Дополнительный стиль для вывода удобочитаемого названия выбранной модели\r\nconst Subtitle = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n`;"],"names":["ModalOverlay","styled","div","ModalContent","IconsContainer","Icon","img","ModelText","CloseButton","button","isOpen","onClose","ModelComponent","onClick","e","stopPropagation","href","target","rel","src","alt","Card","ImageContainer","Placeholder","span","modelKey","imageData","displayName","modelNames","G","image","getImage","style","width","height","imgStyle","objectFit","autocranes","isModalOpen","setIsModalOpen","useState","selectedModel","setSelectedModel","selectedModelText","setSelectedModelText","images","useStaticQuery","getModelImage","model","imageNode","allFile","edges","find","edge","node","name","childImageSharp","Layout","Header","DesktopHeader","Title","to","Logo","ContactInfo","ContactItem","StyledLink","TelegramLogo","TabletHeader","TopRow","BottomRow","MobileHeader","Container","Grid","map","key","handleCardClick","ModalContact","autocraneTexts","Subtitle","Footer","Date","getFullYear","header","h1","h2","a","footer","p"],"sourceRoot":""}