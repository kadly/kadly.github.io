{"version":3,"file":"component---src-pages-category-shortbasecranes-js-73fb3c9d219dc263251c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Footer.js","webpack://gatsby-starter-default/./src/components/Header.js","webpack://gatsby-starter-default/./src/components/LayoutComponents.js","webpack://gatsby-starter-default/./src/components/ModalContact.js","webpack://gatsby-starter-default/./src/components/ModelCard.js","webpack://gatsby-starter-default/./src/modelNames/autocranes.js","webpack://gatsby-starter-default/./src/shortinfo/shortbasecranes/index.js","webpack://gatsby-starter-default/./src/shortinfo/shortbasecranes/ZRT400.js","webpack://gatsby-starter-default/./src/shortinfo/shortbasecranes/ZRT600.js","webpack://gatsby-starter-default/./src/shortinfo/shortbasecranes/ZRT850.js","webpack://gatsby-starter-default/./src/shortinfo/shortbasecranes/ZRT1100.js","webpack://gatsby-starter-default/./src/modelNames/shortbasecranes.js","webpack://gatsby-starter-default/./src/pages/category/shortbasecranes.js"],"sourcesContent":["// Footer.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Стили для контейнера футера\r\nconst FooterContainer = styled.footer`\r\n  text-align: center;\r\n  padding: 20px;\r\n  background: #333;\r\n  color: white;\r\n  margin-top: auto;\r\n  font-size: 16px;\r\n\r\n  /* Медиазапрос для устройств с шириной экрана до 768px (планшеты) */\r\n  @media (max-width: 768px) {\r\n    font-size: 14px;\r\n    padding: 15px;\r\n  }\r\n\r\n  /* Медиазапрос для устройств с шириной экрана до 480px (мобильные) */\r\n  @media (max-width: 480px) {\r\n    font-size: 12px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst Footer = ({ companyName, /*yearsActive,*/ websiteUrl }) => {\r\n  const currentYear = new Date().getFullYear();\r\n  const establishedYear = 2000; // Год основания компании\r\n  const yearsActive = currentYear - establishedYear; // Автоматически вычисляем число лет\r\n  return (\r\n    <FooterContainer>\r\n      <p>\r\n        &copy; {currentYear} {companyName}. {yearsActive} лет на мировом рынке.\r\n        {/*{websiteUrl && (\r\n          <span>\r\n            &nbsp;\r\n            <a href={websiteUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Наш сайт\r\n            </a>\r\n          </span>\r\n        )}*/}\r\n      </p>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;","// Header.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\nconst HeaderContainer = styled.header`\r\n  padding: 20px;\r\n  background: #eee;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  /* Для экранов от 768px — располагаем три блока в строку */\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\n/* Левый блок с логотипом */\r\nconst LeftContainer = styled.div`\r\n  margin-bottom: 10px;\r\n  /* Анимация появления */\r\n  animation: fadeIn 1s ease-in-out;\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\n/* Центральный блок с динамическим текстом */\r\nconst CenterContainer = styled.div`\r\n  font-size: 2rem; /* Меньший размер для мобильных устройств */\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 4rem; /* Увеличенный размер для экранов от 768px */\r\n    margin-bottom: 0;\r\n    flex-grow: 1;\r\n    text-align: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\n/* Правый блок с контактной информацией */\r\nconst RightContainer = styled.div`\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  font-size: 4rem;\r\n  color: #006f3d; /* Фирменный зелёный */\r\n  margin: 0;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  text-align: center;\r\n\r\n  @media (min-width: 768px) {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst City = styled.p`\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n`;\r\n\r\nconst Phone = styled.a`\r\n  display: block;\r\n  margin: 5px 0;\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #006f3d;\r\n  }\r\n`;\r\n\r\nconst TelegramLink = styled.a`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #006f3d;\r\n  }\r\n`;\r\n\r\nconst TelegramIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-left: 8px;\r\n  transform: translateY(2px); /* смещаем иконку вниз для лучшего выравнивания */\r\n`;\r\n\r\nconst Header = ({ centerText }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <LeftContainer>\r\n        <Logo>\r\n          <Link to=\"/\">Zoomlion</Link>\r\n        </Logo>\r\n      </LeftContainer>\r\n      {centerText && (\r\n        <CenterContainer>\r\n          {centerText}\r\n        </CenterContainer>\r\n      )}\r\n      <RightContainer>\r\n        <ContactInfo>\r\n          <City>г. Новосибирск</City>\r\n          <Phone href=\"tel:+7-923-708-22-54\">+7-923-708-22-54</Phone>\r\n          <TelegramLink\r\n            href=\"https://t.me/gmitry\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Telegram\r\n            <TelegramIcon\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/512px-Telegram_logo.svg.png\"\r\n              alt=\"Telegram logo\"\r\n            />\r\n          </TelegramLink>\r\n        </ContactInfo>\r\n      </RightContainer>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  flex: 1 0 auto;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 16px 8px; /* 16px для вертикального отступа и 8px для горизонтального */\r\n  justify-items: center;\r\n  padding: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\n// Дополнительный стиль для вывода удобочитаемого названия выбранной модели\r\nexport const Subtitle = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  max-width: 450px; /* Немного уменьшаем ширину окна */\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center; /* Центрируем заголовок и логотипы */\r\n`;\r\n\r\nconst IconsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst ModelText = styled.div`\r\n  margin: 1rem 0;\r\n  font-size: 16px;\r\n  \r\n  /* Заголовок модели оставляем по центру */\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Список отображаем как блок, выровненный по левому краю */\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0 auto;\r\n    max-width: 90%;\r\n    text-align: left;\r\n  }\r\n  \r\n  li {\r\n    /* Пункты списка по умолчанию выравниваются по левому краю */\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: #006f3d;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n\r\n  &:hover {\r\n    background: #00532d;\r\n  }\r\n`;\r\n\r\nconst ModalContact = ({ isOpen, onClose, ModelComponent }) => {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ModalOverlay onClick={onClose}>\r\n      <ModalContent onClick={(e) => e.stopPropagation()}>\r\n        <h2>Связаться с продавцом</h2>\r\n        <IconsContainer>\r\n          <a href=\"https://telegram.me/gmitry\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg\" alt=\"Telegram\" />\r\n          </a>\r\n          <a href=\"https://wa.me/7231280168\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"WhatsApp\" />\r\n          </a>\r\n        </IconsContainer>\r\n        <ModelText>\r\n          {ModelComponent ? <ModelComponent /> : \"Информация о модели недоступна.\"}\r\n        </ModelText>\r\n        <CloseButton onClick={onClose}>Закрыть</CloseButton>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default ModalContact;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport modelNames from '../modelNames/autocranes.js';\r\n\r\nconst Card = styled.div`\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  background: #fff;\r\n  padding: 16px;\r\n  cursor: pointer;\r\n  width: 300px; /* Фиксированная ширина карточки */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 200px;  /* Фиксированная высота для области изображения */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #eee;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Placeholder = styled.span`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst ModelCard = ({ modelKey, imageData, onClick }) => {\r\n  const displayName = modelNames[modelKey] || modelKey;\r\n  return (\r\n    <Card onClick={onClick}>\r\n      <ImageContainer>\r\n        {imageData ? (\r\n          <GatsbyImage\r\n            image={getImage(imageData)}\r\n            alt={displayName}\r\n            style={{ width: '100%', height: '100%' }}\r\n            imgStyle={{ objectFit: 'contain' }} // Обеспечивает, что изображение не обрезается\r\n          />\r\n        ) : (\r\n          <Placeholder>Нет фото</Placeholder>\r\n        )}\r\n      </ImageContainer>\r\n      <h3>{displayName}</h3>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModelCard;","const modelNames = {\r\n    \"ZMC251C\": \"ZMC-25-1C\",\r\n    \"ZMC601W1\": \"ZMC-60-1W1\",\r\n    \"ZTC250V\": \"ZTC250V\",\r\n    \"ZTC300V\": \"ZTC300V\",\r\n    \"ZTC600V5521T\": \"ZTC600V552.1T\",\r\n    \"ZTC600V5522C\": \"ZTC600V552.2C\",\r\n    \"ZTC800V\": \"ZTC800V\",\r\n    \"ZTC800V5525C\": \"ZTC800V552.5C\",\r\n    \"ZTC1000V\": \"ZTC1000V\",\r\n    \"ZTC1500H\": \"ZTC1500H\",\r\n    \"ZAT2000V\": \"ZAT2000V\",\r\n    \"ZAT2500V\": \"ZAT2500V\",\r\n    \"ZAT3000V\": \"ZAT3000V\",\r\n    \"ZAT3500V\": \"ZAT3500V\",\r\n    \"ZAT4500V\": \"ZAT4500V\",\r\n    \"ZTC250V5521T\": \"ZTC250V552-1T\",\r\n    \"ZTC250V5521C\": \"ZTC250V552-1C\",\r\n    \"ZTC300V5521T\": \"ZTC300V552-1T\",\r\n    \"ZTC300V5521C\": \"ZTC300V552-1C\",\r\n    \"ZTC500V5521T\": \"ZTC500V552-1T\",\r\n    \"ZTC500V5521C\": \"ZTC500V552-1C\",\r\n    \"ZTC700V5521T\": \"ZTC700V552-1T\",\r\n    \"ZTC700V5521C\": \"ZTC700V552-1C\",\r\n    \"ZTC800V5521T\": \"ZTC800V552-1T\",\r\n    \"ZTC800V5521C\": \"ZTC800V552-1C\",\r\n    \"ZAT1200V7531T\": \"ZAT1200V753.1T\",\r\n    \"ZAT1200V7531C\": \"ZAT1200V753.1C\",\r\n    \"ZAT1600H853C\": \"ZAT1600H853C\",\r\n    \"ZAT2000V853C\": \"ZAT2000V853C\",\r\n    };\r\n  \r\n  export default modelNames;","// Импортируем компонент модели\r\nimport ZRT400 from './ZRT400.js';\r\nimport ZRT600 from './ZRT600.js';\r\nimport ZRT850 from './ZRT850.js';\r\nimport ZRT1100 from './ZRT1100.js';\r\n\r\nconst shortbasecraneTexts = {\r\n  'ZRT400': ZRT400,\r\n  'ZRT600': ZRT600,\r\n  'ZRT850': ZRT850,\r\n  'ZRT1100': ZRT1100,\r\n};\r\n\r\nexport default shortbasecraneTexts;","import React from 'react';\r\n\r\nconst ZRT400 = () => (\r\n  <div>\r\n    <h3>Кран ZRT400</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 400 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 80 метров</li>\r\n      <li><strong>Максимальная высота подъёма:</strong> 110 метров</li>\r\n      <li><strong>Двигатель:</strong> Cummins QSK60, мощность 600 л.с.</li>\r\n      <li><strong>КПП:</strong> ZF 16S2525</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZRT400;","import React from 'react';\r\n\r\nconst ZRT600 = () => (\r\n  <div>\r\n    <h3>Кран ZRT600</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 600 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 90 метров</li>\r\n      <li><strong>Максимальная высота подъёма:</strong> 120 метров</li>\r\n      <li><strong>Двигатель:</strong> Caterpillar C27, мощность 750 л.с.</li>\r\n      <li><strong>КПП:</strong> ZF 16S2525</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZRT600;","import React from 'react';\r\n\r\nconst ZRT850 = () => (\r\n  <div>\r\n    <h3>Кран ZRT850</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 850 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 100 метров</li>\r\n      <li><strong>Максимальная высота подъёма:</strong> 130 метров</li>\r\n      <li><strong>Двигатель:</strong> Caterpillar C32, мощность 900 л.с.</li>\r\n      <li><strong>КПП:</strong> Allison 4500</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZRT850;","import React from 'react';\r\n\r\nconst ZRT1100 = () => (\r\n  <div>\r\n    <h3>Модель ZRT1100</h3>\r\n    <ul>\r\n      <li><strong>Грузоподъёмность:</strong> 1100 тонн</li>\r\n      <li><strong>Максимальная длина стрелы:</strong> 110 метров</li>\r\n      <li><strong>Максимальная высота подъёма:</strong> 140 метров</li>\r\n      <li><strong>Двигатель:</strong> Caterpillar C32, мощность 1100 л.с.</li>\r\n      <li><strong>КПП:</strong> Allison 4500</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ZRT1100;","const modelNames = {\r\n    \"ZRT400\": \"ZRT400\",\r\n    \"ZRT600\": \"ZRT600\",\r\n    \"ZRT850\": \"ZRT850\",\r\n    \"ZRT1100\": \"ZRT1100\",\r\n    };\r\n  \r\n  export default modelNames;","import React, { useState } from 'react';\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport ModalContact from '../../components/ModalContact';\r\nimport shortbasecraneTexts from '../../shortinfo/shortbasecranes';\r\nimport modelNames from '../../modelNames/shortbasecranes';\r\nimport ModelCard from '../../components/ModelCard';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Layout, Container, Grid, Subtitle } from '../../components/LayoutComponents';//Стилизация компонентов\r\n\r\nconst shortbasecranes = [\r\n  \"ZRT400\", \"ZRT600\", \"ZRT850\", \"ZRT1100\"\r\n];\r\n\r\nconst ShortbasecranesPage = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState(null);\r\n  const [selectedModelText, setSelectedModelText] = useState(\"\");\r\n  \r\n  // Обработчик клика по карточке модели\r\n  const handleCardClick = (model) => {\r\n    setIsModalOpen(true);\r\n    setSelectedModel(model);\r\n    // Используем modelNames для получения удобочитаемого названия\r\n    setSelectedModelText(modelNames[model] || model);\r\n  };\r\n  // Функция закрытия модального окна\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedModel(null);\r\n    setSelectedModelText(\"\");\r\n  };\r\n\r\n  const images = useStaticQuery(graphql`\r\n    query {\r\n      allFile(filter: { relativeDirectory: { eq: \"shortbasecranes\" } }) {\r\n        edges {\r\n          node {\r\n            name\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300, layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  // Функция для получения изображения по имени модели\r\n  const getModelImage = (model) => {\r\n    const imageNode = images.allFile.edges.find(edge => edge.node.name === model);\r\n    return imageNode ? getImage(imageNode.node.childImageSharp) : null;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Header centerText=\"Краны короткобазные\" />\r\n\r\n      <Container>\r\n        <Grid>\r\n          {shortbasecranes.map((model) => (\r\n            <ModelCard \r\n              key={model}\r\n              modelKey={model}\r\n              imageData={getModelImage(model)}\r\n              onClick={() => handleCardClick(model)}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Передаём в модальное окно как компонент модель из shortbasecraneTexts */}\r\n      <ModalContact\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        ModelComponent={shortbasecraneTexts[selectedModel]}\r\n      >\r\n        {/* Если нужно, можно добавить выбранный текст прямо сюда */}\r\n        {selectedModelText && <Subtitle>{selectedModelText}</Subtitle>}\r\n      </ModalContact>\r\n\r\n      <Footer\r\n        companyName=\"Зумлион Индустри\"\r\n        yearsActive=\"25\"\r\n        websiteUrl=\"https://example.com\"\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ShortbasecranesPage;\r\n\r\nexport const Head = () => (\r\n  <>\r\n    <title>Zoomlion</title>\r\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\" />\r\n  </>\r\n);\r\n"],"names":["FooterContainer","styled","footer","companyName","websiteUrl","currentYear","Date","getFullYear","yearsActive","HeaderContainer","header","LeftContainer","div","CenterContainer","RightContainer","Logo","h1","ContactInfo","City","p","Phone","a","TelegramLink","TelegramIcon","img","centerText","to","href","target","rel","src","alt","Layout","Container","Grid","Subtitle","ModalOverlay","ModalContent","IconsContainer","Icon","ModelText","CloseButton","button","isOpen","onClose","ModelComponent","onClick","e","stopPropagation","Card","ImageContainer","Placeholder","span","modelKey","imageData","displayName","modelNames","G","image","getImage","style","width","height","imgStyle","objectFit","shortbasecranes","isModalOpen","setIsModalOpen","useState","selectedModel","setSelectedModel","selectedModelText","setSelectedModelText","images","useStaticQuery","getModelImage","model","imageNode","allFile","edges","find","edge","node","name","childImageSharp","Header","map","ModelCard","key","handleCardClick","ModalContact","shortbasecraneTexts","Footer","Head","type"],"sourceRoot":""}